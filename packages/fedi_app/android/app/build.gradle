plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}
// flutter_config
project.ext.envConfigFiles = [
    prod: "env_prod.env",
    dev: "env_dev.env",
    nightly: "env_nightly.env",
    fluttertest: "env_fluttertest.env"
]

apply from: project(':flutter_config').projectDir.getPath() + "/dotenv.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    namespace = project.env.get("APP_ID")
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = project.env.get("APP_ID")
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 21
        targetSdk = 30
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        dimension "app"
        manifestPlaceholders.scheme = project.env.get("APP_ID")
        resValue "string", "app_name", project.env.get("APP_TITLE")
        // should be package from Manifest instead of project.env.get("APP_ID")
        // for flutter_config
        resValue "string", "build_config_package", "com.fediverse.app"
    }

 if (keystorePropertiesFile.exists()) {
        signingConfigs {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']

            }
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release

                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }

    flavorDimensions "app"

    productFlavors {
        dev {

        }
        nightly {

        }
        prod {

        }
        fluttertest {

        }
    }
}

flutter {
    source = "../.."
}

// ADD THIS AT THE BOTTOM
if(project.env.get("FIREBASE_ENABLED").toBoolean()) {
    apply plugin: 'com.google.gms.google-services'
}

if(project.env.get("CRASHLYTICS_ENABLED").toBoolean()) {
    apply plugin: 'com.google.firebase.crashlytics'
}
